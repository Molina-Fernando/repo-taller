package ventanas.panelesmedicos;

import clases.Lugares;
import clases.Medico;
import clases.Registro;
import dbController.CtrlMedicoSala;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 * La clase Panel3 es un panel de Swing que extiende de javax.swing.JPanel.
 * Proporciona una interfaz para una funcionalidad específica en tu aplicación.
 */
public class Panel3 extends javax.swing.JPanel {
    
    DefaultTableModel modelo= new DefaultTableModel();
    ArrayList<Object[]>listaRegistros=new ArrayList<>();
    CtrlMedicoSala ctrlMedSal;
    String dni;
    Medico med;
    Registro reg;

    /**
     * Constructor para la clase Panel3.
     * Inicializa los componentes, establece el médico y el DNI, y actualiza los registros.
     *
     * @param dni El DNI que se va a establecer.
     * @param med El médico que se va a establecer.
     */
    public Panel3(String dni, Medico med) {
        initComponents();
        ctrlMedSal=new CtrlMedicoSala(dni);
        this.med=med;
        this.dni=dni;
        modelo.addColumn("Fecha");
        modelo.addColumn("Hora");
        modelo.addColumn("Lugar");
        
        actualizarRegistros();
        if(ctrlMedSal.isRegistroPendiente(this.dni,this.med.getNumMatricula())){
            reg= ctrlMedSal.seleccionarRegistroNoFinalizado(this.dni, this.med.getNumMatricula());
            cargaDiagnostico.setText(reg.getDiagnostico());
        }else{reg=null;}

    }
    
    
    
    /**
     * Este método actualiza los registros en la tabla de registros.
     * Limpia la tabla, obtiene los nuevos registros y los añade a la tabla.
     */
    private void actualizarRegistros(){
        modelo.setRowCount(0);
        tablaRegistros = new javax.swing.JTable();
        tablaRegistros.setModel(modelo);
        listaRegistros=ctrlMedSal.getTablaRegistros(ctrlMedSal.getDni());
        tablaRegistros = new JTable(modelo);
        jScrollPane1.setViewportView(tablaRegistros);

        for (Object[] vector : listaRegistros) {


            modelo.addRow(vector);
            tablaRegistros.setModel(modelo);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaRegistros = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        cargaDiagnostico = new javax.swing.JTextArea();
        BotonCarga = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();

        setPreferredSize(new java.awt.Dimension(550, 650));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        tablaRegistros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Fecha", "Hora", "Lugar"
            }
        ));
        jScrollPane1.setViewportView(tablaRegistros);

        jLabel1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel1.setText("Descripción del diagnostico :");

        jLabel2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel2.setText("Registros");

        jLabel3.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel3.setText("Carga de Registro");

        cargaDiagnostico.setColumns(20);
        cargaDiagnostico.setRows(5);
        jScrollPane3.setViewportView(cargaDiagnostico);

        BotonCarga.setText("Guardar");
        BotonCarga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonCargaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(450, 450, 450)
                .addComponent(jLabel3))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 988, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(420, 420, 420)
                .addComponent(jLabel1))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(240, 240, 240)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 520, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(470, 470, 470)
                .addComponent(BotonCarga))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(470, 470, 470)
                .addComponent(jLabel2))
            .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 994, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1000, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel3)
                .addGap(4, 4, 4)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22)
                .addComponent(jLabel1)
                .addGap(6, 6, 6)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(BotonCarga)
                .addGap(17, 17, 17)
                .addComponent(jLabel2)
                .addGap(11, 11, 11)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Este método se activa cuando se realiza una acción en el botón de carga.
     * Realiza las siguientes operaciones:
     * 1. Obtiene el texto del campo de diagnóstico.
     * 2. Verifica si el campo de texto está vacío o solo tiene espacios en blanco. Si es así, muestra un mensaje de error.
     * 3. Verifica si el texto ingresado excede los 256 caracteres permitidos. Si es así, muestra un mensaje de error.
     * 4. Si no hay errores, carga el registro con los detalles proporcionados y actualiza los registros.
     * Luego, limpia el campo de texto de diagnóstico.
     *
     * @param evt El evento de acción que ocurrió (no se utiliza en este método).
     */
    private void BotonCargaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonCargaActionPerformed
        String texto = cargaDiagnostico.getText();
        if(reg!=null){
            
                    // Verifica si el JTextArea está vacío o solo tiene espacios en blanco
        if (texto.trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "El campo de texto está vacío");
        } else if (texto.length() > 256) {
            // Verifica si el texto ingresado excede los 256 caracteres
            JOptionPane.showMessageDialog(null, "El texto ingresado excede los 256 caracteres permitidos");
        } else {
            ctrlMedSal.actualizarRegistro(new Registro(this.dni,texto,Lugares.EMERGENCIA, this.med.getNumMatricula()));
            actualizarRegistros();
        }
        }else{
                    
        // Verifica si el JTextArea está vacío o solo tiene espacios en blanco
        if (texto.trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "El campo de texto está vacío");
        } else if (texto.length() > 256) {
            // Verifica si el texto ingresado excede los 256 caracteres
            JOptionPane.showMessageDialog(null, "El texto ingresado excede los 256 caracteres permitidos");
        } else {
            ctrlMedSal.cargarRegistro(new Registro(this.dni,texto,Lugares.EMERGENCIA, this.med.getNumMatricula()));
            actualizarRegistros();
        }
        }

    }//GEN-LAST:event_BotonCargaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotonCarga;
    private javax.swing.JTextArea cargaDiagnostico;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JTable tablaRegistros;
    // End of variables declaration//GEN-END:variables
}
